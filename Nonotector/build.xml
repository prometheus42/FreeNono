<?xml version="1.0"?>
<project name="Nonotector" basedir="." default="build">

	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="lib" location="../FreeNono/lib" />
	<property name="lib_data" location="../lib_data/bin" />
	<property name="lib_data.src" location="../lib_data/src" />
	<property name="startScript" value="Nonotector.sh" />

	<property name="name" value="Nonotector" />
	<property name='app.version' value='0.1' />
	<property name='app.name' value='Nonotector' />
	<property name='app.vendor' value='FreeNono Development Team' />


	<echo>
	    Application: ${app.name} ${app.version}
	    Build File : ${ant.file} 
	    Run by     : ${user.name}
	    Build Dir  : ${build}
	</echo>

	

	<target name="init">

		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the directory structure -->
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />

	</target>


	<target name="build" depends="init" description="compile the source ">

		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" debug="false" deprecation="true" 
		    optimize="true" includeantruntime="false" target="1.6" source="1.6">
			<!-- Set classpath -->
			<classpath>
				<pathelement path="${lib_data}" />
				<pathelement path="${lib}/log4j-1.2.jar" />
			</classpath>
		</javac>

	</target>
	

	<target name="dist" depends="build" description="generate the distribution">

		<copy todir="${dist}/lib/">
			<fileset dir="${lib}" includes="log4j-1.2.jar" />
		</copy>
		
		<!-- Put everything into JAR file -->
		<jar jarfile="${dist}/${name}-${app.version}-${DSTAMP}.jar" basedir="${build}">

			<!-- Include source files -->
			<fileset dir="${src}" includes="**/*.java" />
			<!-- TODO include src from libs? -->

			<!-- Include bin files from lib projects -->
			<fileset dir="${lib_data}" includes="**/*.class" />

			<!-- Include resource files -->
			<fileset dir="${lib_data.src}" includes="resources/xsd/nonogram.xsd" />
			<fileset dir="${src}" includes="log4j.xml" />

			<manifest>
				<attribute name="Main-Class" value="org.freenono.nonotector.Nonotector" />
				<attribute name="Class-Path" value="${lib}/log4j-1.2.jar" />
				
				<section name="org/freenono/nonotector/">
					<attribute name="Specification-Title" value="${app.name}" />
					<attribute name="Specification-Version" value="${app.version}" />
					<attribute name="Specification-Vendor" value="${app.vendor}" />
					<attribute name="Implementation-Title" value="${app.name}" />
					<attribute name="Implementation-Version" value="${app.version}" />
					<attribute name="Implementation-Vendor" value="${app.vendor}" />
				</section>
			</manifest>
		</jar>

		<!-- Include readme file in dist folder-->
		<copy file="README" todir="${dist}" />
		<copy file="LICENSE" todir="${dist}" />

		<!-- Replace placeholder in readme file-->
		<replace file="${dist}/README">
			<replacefilter token="@version@" value="${app.version}" />
			<replacefilter token="@date@" value="${TODAY}" />
		</replace>

	</target>

	

	<target name="clean" description="clean up">

		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />

	</target>

	

	<target name="prepareLauncher" depends="init" 
		description="prepare launcher for linux and windows to include in dist">

		<!-- Create start script -->
		<condition property="startScript" value="runNonotector.bat">
			<os family="windows" />
		</condition>
		<condition property="scriptSource" value="@echo off${line.separator}echo Nonotector is not tested under Microsoft Windows yet!">
			<os family="windows" />
		</condition>

		<condition property="startScript" value="runNonotector.sh">
			<os family="unix" />
		</condition>
		<condition property="scriptSource" value="#!/bin/bash${line.separator}java -jar ./${name}-${app.version}-${DSTAMP}.jar -cp *">
			<os family="unix" />
		</condition>

		<echo file="${dist}/${startScript}" message="${scriptSource}" append="false" />
		<chmod file="${dist}/${startScript}" perm="a+x" />

	</target>

	
	
	<target name="distZip" depends="dist, prepareLauncher" description="zipping build with launcher scripts for distribution">
		
	    <!-- rename dist directory -->
	    <move file="${dist}" tofile="${app.name}-${app.version}"/>
	    
	    <!-- zip dist directory and delete it -->
	    <zip destfile="${app.name}-${app.version}.zip">
    		<zipfileset prefix="${app.name}" dir="${app.name}-${app.version}" includes="**/*"/>
		</zip>
    	<delete dir="${app.name}-${app.version}" />
		
	</target>
	
</project>
